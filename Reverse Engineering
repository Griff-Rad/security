         lvaZsAC2R0TC, 10.50.15.162

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!DEMO!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
demo1_new.exe


#STATIC ANALYSIS
         file demo1_new.exe
                  demo1_new.exe: PE32 executable (console) Intel 80386, for MS Windows
         xxd demo1_new.exe | head
         xxd /bin/ls | head
                  binary hex dump results
         strings demo1_new.exe
                  copy over strings within the file that look interesting

#HASH 
         md5sum demo1_new.exe
                  *result of the hash*
         sha256sum demo1_new.exe
                  *result of the hash*
                           modified times and permissions and such

#DYNAMIC ANALYSIS
//Transfer to windows
         python3 -m http.serer 8080 (<RHP>)
         *browse to linop station ip with RHP*
         download the code
RUN IT
open GHIDRA
         new project 
         nonshared product
         import file 
         search for strings in the default
         compare to itself 
         export as PE

---------------------------------------------------------------------------------------------------------------------------
REVERSE ENGINEERING CTF
Prior Approvals:All files can be extracted from the known target "Donovian-Webserver". Only authorized to conduct task on Analyst Workstations.

T1
Hostname: web.site.donovia
IP: 192.168.28.111
OS: unknown
Creds: comrade::StudentWebExploitPassword
Last Known SSH Port: unknown
PSP: Unknown
Malware: Unknown
Action: Extract approved binaries under directory titled "longTermStorage".

What is %RAX and %EAX main purpose?
         They are the first return registers for x86-64 and x86
What is %RIP and %EIP main purpose?
         %RIP/%EIP are the 64 bit and 32 bit instruction pointers that hold the memory address to the next instruction
What is %RBP and %EBP main purpose?
         They are the 64 bit and 32 bit stack base pointers
What is %R8 size in bits?
         64 bits
Which of these registers has a size of 32 bits?
         %R12D
What register does the JE instruction rely upon?
         EFLAGS
What flag does the JE instruction rely upon?
          Zero Flag
What does the CMP instruction do?
         Compares 2 values via subtraction
Main:
   Mov R8, 25
   Push R8
   Mov R10, 50
   Push R10
   Pop RAX
What value is on the top of the stack?
         25

Main:
   Mov R8, 25
   Push R8
   Mov R10, 50
   Push R10
   Pop RAX
What value is in the return register?
         50
Main:
    Mov R9, 5
    Mov R10, 20
    Add R10, R9
    CMP R10, R9
    JE Clean
    Mov RAX, 14
    ret
Clean:
    Mov RAX, 0
    ret
What value is returned?
         Step-by-step execution:
                  Mov R9, 5
                           R9 = 5
                  Mov R10, 20
                           R10 = 20
                  Add R10, R9
                           R10 = 20 + 5 = 25
                  CMP R10, R9
                           Compares R10 (25) with R9 (5)
                           Effectively checks if they are equal.
                           Since 25 ≠ 5, the Zero Flag (ZF) is not set.
                  JE Clean
                           "Jump if Equal" → only jumps if ZF = 1.
                           ZF = 0 → no jump.
                  Mov RAX, 14
                           RAX = 14
                  ret
                  Returns from the function with RAX = 14
What does the printf() function do?
         It sends formatted output to standard out (E.g. the terminal)
What does the fgets() function do?
          It reads a line from the specified stream and stores it into a character array 
What does the strcmp() function do?
          It compares two strings (character arrays) 
What is a successful return code for the strcmp() function if the two strings are the same?
       0
What is main()?
       It is the designated entry point to a program 
int main(void){
       int num1 = 77;
       printf("%d",num1);
       return 0;
}
         What is num1’s variable type?
                  int
int main(void){
       int num1 = 77;
       printf("%d",num1);
       return 0;
}
         What is num1’s value?
                  77
int main(void){
       int num1 = 77;
       printf("%d",num1);
       return 0;
}
         What value is printed to the terminal upon execution?
                  77
int main(void){
       int num1 = 77;
       printf("%d",num1);
       return 0;
}
         What is “%d” in this program?
                   %d is a format specifier for a signed decimal/integer          
int main(void){
       int num1 = 77;
       printf("%d",num1);
       return 0;
}
         What is important about “return 0”?
                  A return code of 0 is generally a clean exit of the program 
int main(void){
     char *word1 = “word”;
     char *word2 = “words”;
     if(strcmp(word1,word2)==0){
     printf(“same”);
  }
  else{
     printf(“different”);
  }
}
         What is returned to stdout when executed?
                  different

















         















































